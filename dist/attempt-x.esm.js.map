{"version":3,"sources":["../src/attempt-x.js"],"names":[],"mappings":"AAAA;;;;;;;;;AASA,IAAM,OAAO,GAAG,SAAS,OAAT,CAAiB,EAAjB,EAA8B;AAC5C,MAAI;AAAA,sCADkC,IAClC;AADkC,MAAA,IAClC;AAAA;;AACF,WAAO;AACL,MAAA,KAAK,EAAE,KADF;;AAEL;AACA,MAAA,KAAK,EAAE,EAAE,CAAC,KAAH,CAAS,IAAT,EAAe,IAAf;AAHF,KAAP;AAKD,GAND,CAME,OAAO,CAAP,EAAU;AACV,WAAO;AACL,MAAA,KAAK,EAAE,IADF;AAEL,MAAA,KAAK,EAAE;AAFF,KAAP;AAID;AACF,CAbD;;AAeA,eAAe,OAAf","file":"attempt-x.esm.js","sourcesContent":["/**\n * This method attempts to invoke the function, returning either the result or\n * the caught error object. Any additional arguments are provided to the\n * function when it's invoked.\n *\n * @param {Function} [fn] - The function to attempt.\n * @param {...*} [args] - The arguments to invoke the function with.\n * @returns {object} Returns an object of the result.\n */\nconst attempt = function attempt(fn, ...args) {\n  try {\n    return {\n      threw: false,\n      /* eslint-disable-next-line babel/no-invalid-this */\n      value: fn.apply(this, args),\n    };\n  } catch (e) {\n    return {\n      threw: true,\n      value: e,\n    };\n  }\n};\n\nexport default attempt;\n"]}